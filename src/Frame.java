import javax.swing.*;
import java.awt.*;

/**
 * 界面
 * @author hjy
 * @create 2018/12/30
 **/
public class Frame extends javax.swing.JFrame {

	private ImageIcon[] imageIcon = new ImageIcon[1];

	/**
	 * Creates new form MySwingFrame
	 */
	public Frame() {
		Container container = getContentPane();
		container.setLayout(null);


		jLabel1 = new JLabel("<html><font size=40 color =red>显示:</font></html>", SwingConstants.CENTER);   //设置标签1的字体大小颜色并居中显示在标签
		jLabel1.setBounds(650, 20, 100, 100);  //设置标签1在容器上的位置和大小
		container.add(jLabel1);  //容器添加组件

		jTextField1 = new JTextField(500);
		jTextField1.setFont(new Font("隶书", Font.BOLD, 30));  //设置文本框显示字体的样式大小
		jTextField1.setBounds(770, 20, 500, 100);
		jTextField1.setBorder(BorderFactory.createEtchedBorder(Color.red, Color.blue));  //设置四周有凹痕的边界，并指定内外部的突边与阴影的颜色
		container.add(jTextField1);

		MyPrintStream mps = new MyPrintStream(System.out, jTextField1);    //通过继承printstream类,并把要显示信息的组件作为参数传入到这个自定义的打印流类printstream中。
		System.setOut(mps);  //设置输出重定向
		System.setErr(mps);  //将错误输出也重定向,用于e.pritnStackTrace


		jLabel2 = new JLabel();
		jLabel2.setBounds(0, 130, 1920, 930);
		imageIcon[0] = new ImageIcon(new ImageIcon("2222.jpg").getImage().getScaledInstance(1920, 900, Image.SCALE_DEFAULT));   //得到图片并设置图片的大小，按默认比例
		jLabel2.setIcon(imageIcon[0]);
		jLabel2.setHorizontalAlignment(SwingConstants.CENTER);  //让图片在标签2居中显示
		container.add(jLabel2);
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
	// <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
	private void initComponents() {

		jPanel1 = new javax.swing.JPanel();
		jTextField1 = new javax.swing.JTextField();
		jLabel1 = new javax.swing.JLabel();
		jLabel2 = new javax.swing.JLabel();

		setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

		jTextField1.setText("jTextField1");

		jLabel1.setText("jLabel1");

		jLabel2.setText("jLabel2");

		javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
		jPanel1.setLayout(jPanel1Layout);
		jPanel1Layout.setHorizontalGroup(
				jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
						.addGroup(jPanel1Layout.createSequentialGroup()
								.addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
								.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
								.addComponent(jTextField1, javax.swing.GroupLayout.DEFAULT_SIZE, 332, Short.MAX_VALUE))
						.addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
		);
		jPanel1Layout.setVerticalGroup(
				jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
						.addGroup(jPanel1Layout.createSequentialGroup()
								.addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
										.addComponent(jTextField1, javax.swing.GroupLayout.DEFAULT_SIZE, 38, Short.MAX_VALUE)
										.addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
								.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
								.addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 255, javax.swing.GroupLayout.PREFERRED_SIZE))
		);

		javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
		getContentPane().setLayout(layout);
		layout.setHorizontalGroup(
				layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
						.addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
		);
		layout.setVerticalGroup(
				layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
						.addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
		);

		pack();
	}// </editor-fold>//GEN-END:initComponents


	public void shows() {
		Frame frame = new Frame();
		frame.getContentPane().setBackground(Color.WHITE);   //设置背景颜色
		Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();  //让界面随屏幕大小改变
		Dimension frameSize = frame.getSize();
		if (frameSize.height > screenSize.height) {
			frameSize.height = screenSize.height;
		}
		if (frameSize.width > screenSize.width) {
			frameSize.width = screenSize.width;
		}
//显示的位置
//frame.setLocation((screenSize.width - frameSize.width) / 2,(screenSize.height - frameSize.height) / 2);
//大小
		frame.setSize(screenSize.width, screenSize.height);
		frame.setVisible(true);      //把图形界面设置为可见
		frame.setResizable(false);   //窗口大小不可改变
		frame.setDefaultCloseOperation(frame.EXIT_ON_CLOSE);    //设置一个默认的关闭操作

	}



	// Variables declaration - do not modify//GEN-BEGIN:variables
	private javax.swing.JLabel jLabel1;
	private javax.swing.JLabel jLabel2;
	private javax.swing.JPanel jPanel1;
	private javax.swing.JTextField jTextField1;
	// End of variables declaration//GEN-END:variables
}

